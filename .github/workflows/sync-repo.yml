name: Manual Sync to Repository
permissions:
  contents: write
on:
  workflow_dispatch: # This workflow is triggered manually only

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Retrieve full history for accurate commit logs

      - name: Retrieve Last Commit Message
        id: last_commit
        run: |
          echo "Retrieving the last commit message..."
          LAST_COMMIT=$(git log -1 --pretty=format:"%s")
          echo "Last commit message: $LAST_COMMIT"
          echo "::set-output name=message::$LAST_COMMIT"

      - name: Remove Unwanted Files
        run: |
          echo "Removing files that should not be duplicated (e.g., sync workflow file)..."
          if [ -f .github/workflows/sync-repo.yml ]; then
            echo "Found sync workflow file. Removing it from the working directory."
            rm .github/workflows/sync-repo.yml
          else
            echo "Sync workflow file not found."
          fi
          echo "Repository status after removal:"
          git status --short

      - name: Reset Commit Author to Target Identity
        run: |
          echo "Resetting commit author to target identity..."
          # Configure Git to use the desired author identity for the new commit from secrets
          git config user.name "${{ secrets.TARGET_USERNAME }}"
          git config user.email "${{ secrets.TARGET_EMAIL }}"
          # Amend the last commit to update the author information without changing the commit message
          git commit --amend --no-edit --reset-author
          echo "Commit author updated. New commit details:"
          git log -1

      - name: Add Remote for Target Repository
        run: |
          echo "Adding remote for the target GitHub repository..."
          REMOTE_URL="https://${{ secrets.TARGET_USERNAME }}:${{ secrets.PAT_TARGET }}@github.com/${{ secrets.TARGET_USERNAME }}/Portfolio.astro.git"
          git remote add target "$REMOTE_URL"
          echo "Configured remotes:"
          git remote -v

      - name: Push Changes to Target Repository
        run: |
          echo "Pushing the current branch to the target GitHub repository..."
          git push target HEAD:main --force
          echo "Push completed successfully."
