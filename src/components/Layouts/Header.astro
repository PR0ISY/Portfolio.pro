---
import LangSwitcher from "./LangSwitcher";
import { createTranslator } from "../../utils/i18n/i18n";
import { getLocalizedUrl, isValidLocale } from "../../utils/i18n/locale";

// Extract locale from URL (first segment)
const currentLocale = Astro.url.pathname.split("/")[1];
const validLocale = isValidLocale(currentLocale) ? currentLocale : "en";
const t = createTranslator(validLocale);

interface Props {
  identity: any;
}

const { identity } = Astro.props;
function linkCSS(link: string | undefined) {
  return `transition-colors duration-200 cursor-pointer ${
    getLocalizedUrl(currentLocale, link) === Astro.url.pathname
      ? "text-purple-400"
      : "text-white hover:text-purple-400"
  }`;
}

const links = [
  { href: "/", label: t("NAV.home") },
  { href: "/projects", label: t("NAV.projects") },
  { href: "/contact", label: t("NAV.contact") },
];
---

<header class="bg-black text-white p-4">
  <div class="container mx-auto flex justify-between items-center">
    <a href={getLocalizedUrl(currentLocale, "/")} class="text-xl font-bold">
      {`${identity?.name.slice(0, 1)}. ${identity?.lastName}`}
    </a>

    <nav class="flex items-center space-x-4">
      <LangSwitcher {currentLocale} client:load />
      {
        links.map((link) => (
          <a
            id={`link-${link.label.toLowerCase()}`}
            href={getLocalizedUrl(currentLocale, link.href)}
            class={linkCSS(link.href)}
          >
            {link.label}
          </a>
        ))
      }
    </nav>
  </div>
</header>
